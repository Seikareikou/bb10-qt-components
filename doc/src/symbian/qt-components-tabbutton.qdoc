/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!

    \qmlclass TabButton
    \ingroup qt-components
    \since 1.0
    \inherits Item

    \brief
    A tab button has an image or a label and can be clicked by the user to
    activate a tab.

    A tabbed interface is made up of tab buttons plus content for each button. A
    tab button is usually positioned by the \l TabBarLayout, but compatible with
    other QML positioning mechanisms such as \l Row or \l Column elements.
    When positioned in a \l ToolBar, the \l ButtonRow is used for positioning.

    On the Symbian platform, a tab button can be also be positioned with the
    \l TabBar.

    \section1 Using a Tab Button

    When adding buttons to a layout, you need to associate a tab button with the
    content for the tab. You also set the text or image for the button. This
    code snippet shows a \l TabBarLayout with three tab buttons. Each
    button has a text title and refers to the id of the tab content associated
    with the button.

    \snippet src/snippets/common/snippet-tabgroup.qml 1

    See the \l TabGroup documentation for more information about creating a
    tabbed interface.

    \sa TabBarLayout, TabGroup, TabBar
*/

/*!
    \qmlproperty Item TabButton::tab

    This is a reference to the tab content (one of the children of a \l
    TabGroup, usually a \l Page) that is activated when this TabButton is
    clicked.

    Note: On some platforms there can be additional logic such as unwinding the
    page stack in a tab if the tab is already selected.

*/


/*!
    \qmlproperty bool TabButton::checked

    The value is \c true if this button is the button for the currently
    activated tab. Otherwise, it is \c false.

    This is a read-only property and therefore should not be manipulated by the
    user.

*/


/*!
    \qmlproperty bool TabButton::pressed

    The value is \c true if the user is currently pressing the tab button.
    Otherwise, it is \c false.

    This is a read-only property and therefore should not be manipulated by the
    user.

*/

/*!
    \qmlproperty string TabButton::text

    Text to be displayed on the button. The default value is an empty string.

*/


/*!
    \qmlproperty url TabButton::iconSource

    The URL for an image to show on the button. The default value is an empty
    string.
*/

/*!
    \qmlsignal TabButton::clicked()

    This signal is emitted when this button is pressed and released.

*/

