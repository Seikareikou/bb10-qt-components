/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project on Qt Labs.
**
** $QT_BEGIN_LICENSE:FDL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlproperty string TextField::placeholderText

    The text that is shown in the text field before the user enters any text.
    When the user starts entering text, the placeholder text is hidden.

*/

/*!
    \qmlproperty int TextField::inputMethodHints

    Settings that indicate what kind of input can be accepted by text field. The
    value is from Qt::InputMethodHints

    \sa TextInput::inputMethodHints

*/

/*!
    \qmlproperty font TextField::font

    Font information for the text in the text field.

    \sa TextInput::font

*/

/*!
    \qmlproperty int TextField::cursorPosition

    The position of the cursor in the TextField.

    \sa TextInput::cursorPosition

*/

/*!
    \qmlproperty bool TextField::readOnly

    If this is \c true, the text field can only be viewed, it cannot be edited.

    If this is \c false, the text field can be edited.

    \sa TextInput::readOnly
*/

/*!
    \qmlproperty int TextField::echoMode

    Specifies how (or if) the text is displayed when the user enters text into
    the text field.  For example, you can set the echo mode to \c Password so
    that the entered text is shown as asterisks.

    \sa TextInput::echoMode

*/

/*!
    \qmlproperty bool TextField::acceptableInput

    Indicates if the text being input is acceptable according to the validator
    or input mask.

    \sa inputMask, validator, TextInput::acceptableInput

*/

/*!
    \qmlproperty string TextField::inputMask

    Allows you to restrict what can be entered into the text field. See
    QLineEdit::inputMask for details about how to define the input mask.

    \sa acceptableInput, validator, TextInput::inputMask
*/

/*!
    \qmlproperty validator TextField::validator

    Allows you to set a validator (IntValidator, DoubleValidator or
    RegExpValidator) for the text field. See TextInput::validator for details.

    \sa acceptableInput, inputMask,
*/

/*!
    \qmlproperty string TextField::selectedText

    This read-only property provides the text that is currently selected in the
    text field.

    \sa TextInput::selectedText
*/

/*!
    \qmlproperty int TextField::selectionEnd

    The cursor position after the last character in the current selection.

    \sa selectionstart, selectedText, cursorPosition, TextInput::selectionEnd

*/

/*!
    \qmlproperty int TextField::selectionStart

    The cursor position before the first character in the current selection.

    \sa selectionEnd, selectedText, cursorPosition, TextInput::selectionStart

*/

/*!
    \qmlproperty string TextField::text

    The text that has been entered into the text field.

*/

/*!
    \qmlmethod TextField::copy()

    Copies the currently selected text to the system clipboard.

    \sa paste, cut, TextInput::copy()

*/

/*!
    \qmlmethod TextField::paste()

    Replaces the currently selected text by the contents of the system
    clipboard.

    \sa copy, cut, TextInput::paste()
*/

/*!
    \qmlmethod TextField::cut()

    Moves the currently selected text to the system clipboard.

    \sa TextInput::cut()
*/

/*!
    \qmlmethod TextField::select(start, end)

    Causes the text from \a start to \a end to be selected.

    \sa selectionStart, selectionEnd, TextInput::select()
*/

/*!
    \qmlmethod TextField::selectAll()

    Causes all text in the text field to be selected.

    \sa TextInput::selectAll()

*/

/*!
    \qmlmethod TextField::selectWord()

    Causes the word closest to the current cursor position to be selected.

    \sa TextInput::selectWord()

*/

/*!
    \qmlmethod TextField::positionAt(x)

    Returns the character position at x pixels from the left edge of the text field.

    \sa TextInput::positionAt()

*/


/*!
    \qmlmethod TextField::positionToRectangle(pos)

    Returns the rectangle that the cursor would occupy if it was placed at \a
    pos character position.

    This is similar to setting the cursorPosition, and then querying the cursor
    rectangle, but the cursorPosition is not changed.

    \sa cursorPosition, TextInput::positionToRectangle()

*/

