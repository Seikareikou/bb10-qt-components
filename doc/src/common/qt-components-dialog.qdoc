/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project on Qt Labs.
**
** $QT_BEGIN_LICENSE:FDL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
** $QT_END_LICENSE$
**
****************************************************************************/
/*!
    \qmlclass Dialog
    \ingroup qt-components
    \since 4.7
    \inherits Item
    \brief
    A Dialog is a top-level window mostly used for short-term tasks and brief
    communications with the user.

    Popup dialogs float above the top layer of the application view, usually overlapping the area reserved for the application content. An application can use a dialog to provide information, give warnings, and ask the user to answer a question or select an option.

*/

/*!
    \qmlproperty list<Item> Dialog::title

    An item for the title area of the dialog. Generally, you would use a Text
    element but, because it is an Item elemnt, you can use any other components
    that are based on Item. For example, you could use an Image element instead
    of Text element.

*/

/*!
    \qmlproperty list<Item> Dialog::content

    An item for the content area of the dialog. This can be made up of any other
    components that are based on Item. For example, you could use a
    ListView so that the user can select from a list of names.

*/

/*!
    \qmlproperty list<Item> Dialog::buttons

    An item for the button area of the dialog. Generally, you would use a Row of Button
    elements but you could use other Item-based elements instead.

*/

/*!
    \qmlproperty Item Dialog::visualParent

    This determines what other item the dialog is 'on top of'.

*/

/*!
    \qmlproperty int Dialog::status

    This indicates the stage of the dialog in the dialog lifecycle. The value is
    from the DialogStatus enumeration.

    \list
      \o Opening - the dialog is in the process of opening
      \o Open - the dialog is open and visible to the user
      \o Closing - the dialog is in the process of closing
      \o Closed - the dialog is closed and no longer visible to the user
    \endlist

*/

/*!
    \qmlmethod Dialog::open()

    You need to call this method to show the dialog to the user.
*/

/*!
    \qmlmethod Dialog::close()

    You can use this method to close the dialog without any user interaction.

*/


/*!
    \qmlmethod Dialog::accept()

    You can use this method to accept the dialog's request without any user
    interaction. The dialog will close and the accepted() signal will be emitted
    as though the user had accepted the dialog's request.

*/

/*!
    \qmlmethod Dialog::reject()

    You can use this method to reject the dialog's request without any user
    interaction. The dialog will close and the rejected() signal will be emitted
    as though the user had rejected the dialog's request.

*/

/*!
    \qmlsignal Dialog::accepted()

    This signal is emitted if the user accepts the dialog's request.

    \sa rejected()

*/

/*!
    \qmlsignal Dialog::rejected()

    This signal is emitted if the user rejects the dialog's request.

    \sa accepted()
*/

