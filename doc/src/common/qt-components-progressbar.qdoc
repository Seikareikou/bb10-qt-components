/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project on Qt Labs.
**
** $QT_BEGIN_LICENSE:FDL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
** $QT_END_LICENSE$
**
****************************************************************************/
/*!

    \qmlclass ProgressBar
    \ingroup qt-components
    \since 4.7
    \inherits Item
    \brief
    A ProgressBar shows the continuing progress of a long-running operation to
    reassure the user that the operation is still progressing.

    Some operations take a period of time to be performed and the user needs
    confirmation that the operation is still ongoing. If the user doesn't get
    some confirmation they might suspect that they did something wrong or that
    the device has broken. A progress bar is one of the mechanisms available for
    providing this reassurance to the user.

    ProgressBar has two presentation modes:

    \list

        \o \e determinate for when the period of time for the operation can be
        measured. In this case, the progress bar shows the proportion of
        progress.

        \o \e indeterminate for when the period of time for the operation is
        unknown. The progress bar is animated but no proportion of progress is
        indicated.

    \endlist

    The user interface guidelines for a platform specify the occasions when a
    progress bar should be displayed and how to display it. However, a common
    rule of thumb is, if an operation takes less than 3 seconds, it is not
    necessary to provide a progress bar.

    \section1 Using a determinate progress bar

    A determinate progress bar has a minimum value, a maximum value and a
    current value. When you set the current value, the progress bar is drawn to
    indicate the proportion of that value between the minimum and maximum
    values.

    For example, if the minimum value is 0 and the maximum value is 100, setting
    \c value to 25 will result in the progress bar being filled one quarter along
    and will look something like the image below.

    \image symbian/progressbar_onequarter.png

    The following code snippet creates a progress bar and demonstrates how a
    progress bar works. The timer is a repeating timer and, every time it is
    triggered, it increments the progress bar \c value property. When the
    maximum value of the progress bar is reached, the "progress" is reset to the
    minimum value and it starts again.

    \snippet src/snippets/symbian/snippet-progressbar.qml 0

    \section1 Using an indeterminate progress bar

    To show an indeterminate progress bar, simply set the \c indeterminate
    property to \c true. Setting the different value properties of an
    indeterminate progress bar has no effect. An indeterminate progress bar will
    look something like the following image.

    \image symbian/progressbar_indeterminate.png

    The following code snippet bind the \c visible property of an indeterminate
    progress bar to the \c running property of timer from the above example.

    \snippet src/snippets/symbian/snippet-progressbar.qml 1


*/

/*!
    \qmlproperty real ProgressBar::minimumValue

    The start value of the long-running operation. The progress bar will have
    zero width when the current value is set to \c minimumValue.

    Default is 0.0

*/

/*!
    \qmlproperty real ProgressBar::maximumValue

    The end value of the long-running operation. The progress bar will show its
    full width when the current value is set to \c maximumValue.

    Default is 1.0

*/

/*!
    \qmlproperty real ProgressBar::value

    This current value of the progress bar. The progress bar length is
    calculated as the proportion that \c value is between the minimum and
    maximum values. For example, if \c value is half-way between the minimum and
    maximum values, the progress bar will be filled half way along.

    Default is 0.0
*/

/*!
    \qmlproperty bool ProgressBar::indeterminate

    If this is \c true, the progress bar is animated to indicate that the length
    of the operation is unknown. The value, minimum and maximum properties are
    ignored.

    If this is \c false, the progress bar is drawn to indicate progress between
    the minimum and maximum values.

    Default is \c false.
*/
