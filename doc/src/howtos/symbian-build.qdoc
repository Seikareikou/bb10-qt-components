/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Components project.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page qt-components-symbian-build.html

\title Building the Qt Quick Components for Symbian

\section1 Supported Platforms
\list
\o \l {Supported Platforms}{Qt's Supported Development Platform}
    The components were tested using the following compilers:
    \list
    \o Windows 32/64 bits: VC 2008, MinGW32, GCCE (included in the Qt SDK)
    \o Linux/Mac OS: GCC, \l {external: Building with Remote Compiler}{Remote Compiler}
    \endlist
\o Latest version of the \l {Downloads}{Qt SDK}.
    \list
    \o \l{http://qt.nokia.com/downloads/downloads#qt-lib}{Qt 4.7.3} is included
    in the Qt SDK 1.1 and is the Qt version under which Qt Quick Components for
    Symbian is developed.
    \endlist
\o Symbian^3 devices with PR1.2.
\endlist

\note The Symbian toolchain is only available for Windows. Developers using
Linux or Mac OS must use the \l {external: Building with Remote Compiler}{Remote Compiler} to build Symbian binaries.

\section1 Qt Quick Components for Symbian Libraries
The Qt Quick Components are hosted in \l
{https://qt.gitorious.org/qt-components}{Qt Components Repository} and can be
built from the sources.

On the standard Qt SDK install, the compiled and signed \c sis files for
deployment are found in:
\code
C:\QtSDK\Symbian\sis\Symbian^3\qt-components
\endcode

\section1 Building the Qt Quick Components for Symbian
These instructions detail how to build the sources. The instructions work
for the different \l{Prerequisites}{compilers}.

First, open up the command line, with the Qt tools in the system path. The \c
QTDIR variable needs to point to the Qt binaries. The configure script will
check and configure the Makefile based on the version of qmake and Qt found in
the path. The Qt SDK for Windows has command prompts for different targets and
the path is already set. The Visual Studio command prompt needs to have the Qt
binary in its path.

On Windows, the 'Qt 4.7.3 for Desktop (MinGW)' prompt sets the \c QTDIR variable
to:
\code
C:\QtSDK\Desktop\Qt\4.7.3\mingw
\endcode

\note These instructions were written for the MinGW that came with the Qt SDK
for Windows. The instructions are similar for Linux, Mac OS, or the Visual
Studio tools; simply replace \c mingw32-make with \c make or \c nmake.

In the Qt Quick Components repository root:

\code
configure -symbian
\endcode

After the configure step, run these two commands:
\code
mingw32-make
mingw32-make install
\endcode
These commands will install the Qt Quick Components for Symbian libraries into
the directories where Qt may find them.

\code
%QTDIR%/imports/Qt/labs/components
%QTDIR%/imports/com/nokia/symbian
%QTDIR%/imports/com/nokia/extras
\endcode

\section2 Building the Documentation

The Symbian documentation is generated by running the following commands after
the configuration step:
\code
mingw32-make docs
\endcode

The documentation will reside in \c{doc/html}. In addition, a \c{qch} file will
be generated and placed in \c{doc/qch}. Qt Creator and Qt Assistant can load
the documentation by importing the qch file.

\section1 Testing Applications on Symbian Devices

The \l {external: Qt SDK Manual}{Qt SDK} for Windows has a native compiler for
Symbian devices while the Linux and MacOS Qt SDK must use the remote compiler to
compile Symbian applications.

These are the general steps on developing Qt Quick Components based applications
using the Qt SDK.

\list
\o Install the Symbian tools and \c sis files on the device.

    The Qt SDK can install the necessary \c sis files on Symbian devices.
    Alternatively, the \c sis files can be copied on the device and installed
    from within the file manager on the device.
    \list
    \o \l{external: Connecting Symbian Devices}{Connecting Symbian Devices} -
    details how to connect a Symbian device for Qt development
    \endlist

\o Create or Open the project in Qt Creator.

    Qt Creator now includes a wizard for creating Qt Quick Components projects.
    \code
    File->New File or Project-> Qt Quick Application (Symbian Components)
    \endcode

\o Set up the target in Qt Creator.

    The tool chain for building applications locally on the development PC for
    the Symbian Device target is only supported on Windows. If you develop on
    Linux or Mac OS, you must use the Remote Compiler interface to a compilation
    service at Forum Nokia.

    \list
    \o \l{external: Building Applications for Multiple Targets}{Building Applications for Multiple Targets}
    \o \l{external: Building with Remote Compiler}{Building with Remote Compiler}
    \endlist

\o Run the \c{App TRK} or \c CODA on the device.

    \c {App TRK} and \c CODA are debugging agents that will allow the phone to
    communicate with Qt Creator.
    \list
    \o \l{external: Connecting Symbian Devices}{Connecting Symbian Devices} -
    details the instructions on how to obtain either \c CODA or \c {App TRK}.
    \endlist

\o Press the Debug button.
    Qt Creator will build (using Remote Compiler on Linux or Mac OS) and run the
    application on the phone.
\endlist

\section1 Deploying Applications on Symbian Devices
    The \l{external: Qt Creator Manual}{Qt Creator manual} has the instructions
    on how to deploy Qt Quick applications on a device and on Ovi Store.

    \list
    \o \l{external: Symbian Deployment in Creator}{Symbian Deployment in Creator}
    \o \l{external: Publishing Applications to Ovi Store}{Publishing Applications to Ovi Store}
    \endlist

\section1 Where to Go from Here

The Qt SDK has precompiled \c sis files in the \c{Symbian\sis\Symbian^3\qt-components}
 directory such as examples and demos.

The \l{Symbian Components} and \l{Extras Components} are imported using the
following commands:
\code
import com.nokia.symbian 1.0     // Symbian components
import com.nokia.extras  1.0     // Extras
\endcode

Visit the guides that demonstrate the components usage and view the examples and demo applications.
\list
\o \l{Introduction to the Qt Quick components}{Components introduction}
\o \l{components-cookbook}{Common interface designs}
\o \l{Scalability Guidelines Contents}{Scalability Guidelines}
\o \l{Qt Quick components examples and demos}{Examples and demos}
\endlist

*/

